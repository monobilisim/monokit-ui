name: Build and Release Monokit UI

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
  workflow_dispatch:

jobs:
  build-and-release:
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Bun
        uses: oven-sh/setup-bun@v2

      - name: Install dependencies
        run: bun --bun i

      - name: Build project
        run: bun --bun run build

      - name: Prepare assets for embedding
        run: bun --bun run prepare-assets

      - name: Compile executable
        run: bun --bun build index.ts --compile --minify --sourcemap --outfile build/monokit-ui

      - name: Get latest tag
        id: get_tag
        run: |
          LATEST_TAG=$(git describe --tags --abbrev=0 2>/dev/null || echo "v0.0.0")
          echo "latest_tag=$LATEST_TAG" >> $GITHUB_OUTPUT
          VERSION=${LATEST_TAG#v}
          echo "current_version=$VERSION" >> $GITHUB_OUTPUT

      - name: Calculate next version
        id: next_version
        run: |
          CURRENT_VERSION="${{ steps.get_tag.outputs.current_version }}"
          IFS='.' read -ra VERSION_PARTS <<< "$CURRENT_VERSION"
          MAJOR=${VERSION_PARTS[0]:-0}
          MINOR=${VERSION_PARTS[1]:-0}
          PATCH=${VERSION_PARTS[2]:-0}
          PATCH=$((PATCH + 1))
          NEW_VERSION="$MAJOR.$MINOR.$PATCH"
          NEW_TAG="v$NEW_VERSION"
          echo "new_version=$NEW_VERSION" >> $GITHUB_OUTPUT
          echo "new_tag=$NEW_TAG" >> $GITHUB_OUTPUT

      - name: Create and push tag
        run: |
          git config user.name "github-actions"
          git config user.email "github-actions@github.com"
          git tag ${{ steps.next_version.outputs.new_tag }}
          git push origin ${{ steps.next_version.outputs.new_tag }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ steps.next_version.outputs.new_tag }}
          name: Release ${{ steps.next_version.outputs.new_tag }}
          body: |
            ## Changes
            - Built with Bun
            - Compiled executable included

            ## Assets
            - `monokit-ui` - Compiled executable
          files: |
            build/monokit-ui
          draft: false
          prerelease: false
